import{s as B,V as A}from"./chunks/theme.CFNbPdFi.js";import{C as V,N as y}from"./chunks/circuit.y_FAFz-t.js";import{P as v}from"./chunks/progress-bar.DdOpSzUH.js";import{B as R}from"./chunks/bullets.B2tIYcfe.js";import{d as q,p as t,q as f,v as I,x as N,c as b,o as x,G as a,k as M,w as _,j as i,_ as S,C as T,a2 as O,a as F}from"./chunks/framework.DYiJ1WDi.js";const U={class:"ratelimit"},L={class:"content"},j={class:"form"},z={class:"row"},G={class:"row"},J={class:"visualization"},$={class:"row"},H={class:"row"},K={class:"row"},Q=q({__name:"ratelimit",setup(C){const r=t(null),s=t(5e3),e=t(2),o=t(0),p=t([]),l=t(0),d=t(0),u=t(0),E=t(0),k=t("var(--vp-c-yellow-2)"),n=new B({limitPeriod:s.value,limitForPeriod:e.value}),P=new A({options:{modules:[n]}});f([s],()=>{n.limitPeriod=s.value}),f([e],()=>{n.limitForPeriod=e.value});function g(){l.value&&l.value<s.value||(k.value="var(--vp-c-yellow-2)",d.value=Date.now(),u.value=window.setInterval(()=>{o.value=Date.now()-d.value,o.value>=r.value.duration&&clearInterval(u.value)},100),E.value=window.setInterval(()=>{l.value=Date.now()-d.value,l.value>=s.value&&(k.value="var(--vp-c-green-2)",clearInterval(E.value))},100))}function w(){p.value.push("var(--vp-c-green-2)")}function D(){p.value.push("var(--vp-c-red-2)")}return I(()=>{n.on("execute",g)}),N(()=>{n.off("execute",g)}),(Y,h)=>(x(),b("div",U,[a(V,{ref_key:"circuitRef",ref:r,circuit:M(P),onSuccess:w,onFailure:D},{default:_(()=>{var m;return[i("div",L,[i("div",j,[i("div",z,[a(y,{modelValue:s.value,"onUpdate:modelValue":h[0]||(h[0]=c=>s.value=c),label:"Limit Period (in ms):"},null,8,["modelValue"])]),i("div",G,[a(y,{modelValue:e.value,"onUpdate:modelValue":h[1]||(h[1]=c=>e.value=c),label:"Limit for Period:"},null,8,["modelValue"])])]),i("div",J,[i("div",$,[a(v,{class:"progress",modelValue:o.value,max:(m=r.value)==null?void 0:m.duration,label:"Progress:"},null,8,["modelValue","max"])]),i("div",H,[a(R,{class:"bullets",modelValue:p.value,label:"Results:"},null,8,["modelValue"])]),i("div",K,[a(v,{class:"internal",modelValue:l.value,color:k.value,max:s.value,label:"Ratelimit Duration:"},null,8,["modelValue","color","max"])])])])]}),_:1},8,["circuit"])]))}}),W=S(Q,[["__scopeId","data-v-2587ef42"]]),es=JSON.parse('{"title":"Ratelimit","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api/modules/ratelimit.md","filePath":"guide/api/modules/ratelimit.md"}'),X={name:"guide/api/modules/ratelimit.md"},ls=Object.assign(X,{setup(C){return(r,s)=>{const e=T("ClientOnly");return x(),b("div",null,[s[0]||(s[0]=i("h1",{id:"ratelimit",tabindex:"-1"},[F("Ratelimit "),i("a",{class:"header-anchor",href:"#ratelimit","aria-label":'Permalink to "Ratelimit"'},"​")],-1)),s[1]||(s[1]=i("p",null,[i("code",null,"Ratelimit"),F(" module could be used to avoid sending too many requests to the backend during a configurable period of time.")],-1)),a(e,null,{default:_(()=>[a(W)]),_:1}),s[2]||(s[2]=O(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>If you don&#39;t want more than 3 requests per second, you should define a circuit like this:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mollitia </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mollitia&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mollitia.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modules: [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mollitia.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ratelimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        limitPeriod: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        limitForPeriod: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>If you don&#39;t want more than 3 requests per second, and also at least 200ms between each request, you should define a circuit like this:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ratelimit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mollitia.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ratelimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  limitPeriod: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  limitForPeriod: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ratelimit2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mollitia.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ratelimit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  limitPeriod: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  limitForPeriod: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mollitia.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  options: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modules: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ratelimit2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ratelimit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h2><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;"><code>limitPeriod</code></td><td style="text-align:left;">Specifies the time period during which the ratelimit is calculated</td><td style="text-align:left;"><code>0</code></td></tr><tr><td style="text-align:left;"><code>limitForPeriod</code></td><td style="text-align:left;">Specifies the maximum number of requests during the period</td><td style="text-align:left;"><code>Infinity</code></td></tr></tbody></table><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Returns</th></tr></thead><tbody><tr><td style="text-align:left;"><code>getExecParams()</code></td><td style="text-align:left;">Returns the circuit function parameters.</td><td style="text-align:left;"><code>any[]</code> <strong>params</strong></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Params</th></tr></thead><tbody><tr><td style="text-align:left;"><code>execute</code></td><td style="text-align:left;">Called when the module is executed.</td><td style="text-align:left;"><code>Mollitia.Circuit</code> <strong>circuit</strong>, <code>Promise&lt;T&gt;</code> <strong>promise</strong>, <code>any[]</code> <strong>params</strong></td></tr></tbody></table>`,12))])}}});export{es as __pageData,ls as default};
