import{s as k,V as A,N as f,C as R}from"./chunks/circuit.09598ca0.js";import{P as _}from"./chunks/progress-bar.5a5d4239.js";import{B as V}from"./chunks/bullets.d8c25a9f.js";import{d as M,h as a,x as g,j as q,z as I,o as F,c as C,H as n,w as x,k as s,l as N,_ as S,C as T,a as b,Q as O}from"./chunks/framework.2ce6f3f6.js";import"./chunks/theme.0766ca56.js";const U={class:"ratelimit"},L={class:"content"},$={class:"form"},j={class:"row"},z={class:"row"},H={class:"visualization"},J={class:"row"},Q={class:"row"},G={class:"row"},K=M({__name:"ratelimit",setup(P){const p=a(null),l=a(5e3),e=a(2),r=a(0),c=a([]),t=a(0),d=a(0),u=a(0),m=a(0),y=a("var(--vp-c-yellow-2)"),o=new k({limitPeriod:l.value,limitForPeriod:e.value}),w=new A({options:{modules:[o]}});g([l],()=>{o.limitPeriod=l.value}),g([e],()=>{o.limitForPeriod=e.value});function h(){t.value&&t.value<l.value||(y.value="var(--vp-c-yellow-2)",d.value=Date.now(),u.value=window.setInterval(()=>{r.value=Date.now()-d.value,r.value>=p.value.duration&&clearInterval(u.value)},100),m.value=window.setInterval(()=>{t.value=Date.now()-d.value,t.value>=l.value&&(y.value="var(--vp-c-green-2)",clearInterval(m.value))},100))}function D(){c.value.push("var(--vp-c-green-2)")}function B(){c.value.push("var(--vp-c-red-2)")}return q(()=>{o.on("execute",h)}),I(()=>{o.off("execute",h)}),(as,i)=>(F(),C("div",U,[n(R,{ref_key:"circuitRef",ref:p,circuit:N(w),onSuccess:D,onFailure:B},{default:x(()=>{var v;return[s("div",L,[s("div",$,[s("div",j,[n(f,{modelValue:l.value,"onUpdate:modelValue":i[0]||(i[0]=E=>l.value=E),label:"Limit Period (in ms):"},null,8,["modelValue"])]),s("div",z,[n(f,{modelValue:e.value,"onUpdate:modelValue":i[1]||(i[1]=E=>e.value=E),label:"Limit for Period:"},null,8,["modelValue"])])]),s("div",H,[s("div",J,[n(_,{class:"progress",modelValue:r.value,max:(v=p.value)==null?void 0:v.duration,label:"Progress:"},null,8,["modelValue","max"])]),s("div",Q,[n(V,{class:"bullets",modelValue:c.value,label:"Results:"},null,8,["modelValue"])]),s("div",G,[n(_,{class:"internal",modelValue:t.value,color:y.value,max:l.value,label:"Ratelimit Duration:"},null,8,["modelValue","color","max"])])])])]}),_:1},8,["circuit"])]))}});const W=S(K,[["__scopeId","data-v-2587ef42"]]),X=s("h1",{id:"ratelimit",tabindex:"-1"},[b("Ratelimit "),s("a",{class:"header-anchor",href:"#ratelimit","aria-label":'Permalink to "Ratelimit"'},"​")],-1),Y=s("p",null,[s("code",null,"Ratelimit"),b(" module could be used to avoid sending too many requests to the backend during a configurable period of time.")],-1),Z=O(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>If you don&#39;t want more than 3 requests per second, you should define a circuit like this:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Mollitia </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;mollitia&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circuit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Circuit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  options: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    modules: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Ratelimit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        limitPeriod: </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        limitForPeriod: </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Mollitia </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;mollitia&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circuit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Circuit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  options: {</span></span>
<span class="line"><span style="color:#24292E;">    modules: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Ratelimit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        limitPeriod: </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        limitForPeriod: </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>If you don&#39;t want more than 3 requests per second, and also at least 200ms between each request, you should define a circuit like this:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ratelimit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Ratelimit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  limitPeriod: </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  limitForPeriod: </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ratelimit2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Ratelimit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  limitPeriod: </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  limitForPeriod: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circuit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Circuit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  options: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    modules: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      ratelimit2,</span></span>
<span class="line"><span style="color:#E1E4E8;">      ratelimit</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ratelimit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Ratelimit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  limitPeriod: </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  limitForPeriod: </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ratelimit2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Ratelimit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  limitPeriod: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  limitForPeriod: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circuit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Circuit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  options: {</span></span>
<span class="line"><span style="color:#24292E;">    modules: [</span></span>
<span class="line"><span style="color:#24292E;">      ratelimit2,</span></span>
<span class="line"><span style="color:#24292E;">      ratelimit</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h2><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;"><code>limitPeriod</code></td><td style="text-align:left;">Specifies the time period during which the ratelimit is calculated</td><td style="text-align:left;"><code>0</code></td></tr><tr><td style="text-align:left;"><code>limitForPeriod</code></td><td style="text-align:left;">Specifies the maximum number of requests during the period</td><td style="text-align:left;"><code>Infinity</code></td></tr></tbody></table><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Returns</th></tr></thead><tbody><tr><td style="text-align:left;"><code>getExecParams()</code></td><td style="text-align:left;">Returns the circuit function parameters.</td><td style="text-align:left;"><code>any[]</code> <strong>params</strong></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Params</th></tr></thead><tbody><tr><td style="text-align:left;"><code>execute</code></td><td style="text-align:left;">Called when the module is executed.</td><td style="text-align:left;"><code>Mollitia.Circuit</code> <strong>circuit</strong>, <code>Promise&lt;T&gt;</code> <strong>promise</strong>, <code>any[]</code> <strong>params</strong></td></tr></tbody></table>`,12),ps=JSON.parse('{"title":"Ratelimit","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api/modules/ratelimit.md","filePath":"guide/api/modules/ratelimit.md"}'),ss={name:"guide/api/modules/ratelimit.md"},is=Object.assign(ss,{setup(P){return(p,l)=>{const e=T("ClientOnly");return F(),C("div",null,[X,Y,n(e,null,{default:x(()=>[n(W)]),_:1}),Z])}}});export{ps as __pageData,is as default};
