import{_ as s,o as t,c as a,Q as e}from"./chunks/framework.b96a75df.js";const h=JSON.parse('{"title":"Prometheus","description":"","frontmatter":{},"headers":[],"relativePath":"guide/customization/addons/prometheus.md","filePath":"guide/customization/addons/prometheus.md"}'),l={name:"guide/customization/addons/prometheus.md"},n=e(`<h1 id="prometheus" tabindex="-1">Prometheus <a class="header-anchor" href="#prometheus" aria-label="Permalink to &quot;Prometheus&quot;">​</a></h1><p>The <code>Mollitia</code> <a href="https://prometheus.io/" target="_blank" rel="noreferrer">Prometheus</a> addon adds metrics on every circuit and module so that you can monitor and analyze your applications.</p><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Install mollitia</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mollitia</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save</span></span>
<span class="line"><span style="color:#6A737D;"># Install the prometheus addon</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@mollitia/prometheus</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Install mollitia</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mollitia</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save</span></span>
<span class="line"><span style="color:#6A737D;"># Install the prometheus addon</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@mollitia/prometheus</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save</span></span></code></pre></div><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Then add the addon</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Mollitia </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;mollitia&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> MollitiaPrometheus </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@mollitia/prometheus&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Mollitia.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> MollitiaPrometheus.</span><span style="color:#B392F0;">PrometheusAddon</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Then add the addon</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Mollitia </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;mollitia&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> MollitiaPrometheus </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@mollitia/prometheus&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Mollitia.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> MollitiaPrometheus.</span><span style="color:#6F42C1;">PrometheusAddon</span><span style="color:#24292E;">());</span></span></code></pre></div><p>Then, add <code>Prometheus</code> options when creating circuits or modules:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Timeout</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	prometheus: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		name: </span><span style="color:#9ECBFF;">&#39;my-module&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myCircuit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Circuit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  options: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    prometheus: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      name: </span><span style="color:#9ECBFF;">&#39;my-circuit&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      labels: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        tag2: </span><span style="color:#9ECBFF;">&#39;val2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        tag3: </span><span style="color:#9ECBFF;">&#39;val3&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myCircuitMetrics</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> myCircuit.prometheus.metrics; </span><span style="color:#6A737D;">// Will return an object containing all metrics from this circuit</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myCircuitScrap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> myCircuit.prometheus.</span><span style="color:#B392F0;">scrap</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Will return the Prometheus scrap from this circuit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myModule</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Timeout</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	prometheus: {</span></span>
<span class="line"><span style="color:#24292E;">		name: </span><span style="color:#032F62;">&#39;my-module&#39;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myCircuit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Circuit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  options: {</span></span>
<span class="line"><span style="color:#24292E;">    prometheus: {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;my-circuit&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      labels: {</span></span>
<span class="line"><span style="color:#24292E;">        tag2: </span><span style="color:#032F62;">&#39;val2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        tag3: </span><span style="color:#032F62;">&#39;val3&#39;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myCircuitMetrics</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myCircuit.prometheus.metrics; </span><span style="color:#6A737D;">// Will return an object containing all metrics from this circuit</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myCircuitScrap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myCircuit.prometheus.</span><span style="color:#6F42C1;">scrap</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Will return the Prometheus scrap from this circuit</span></span></code></pre></div><p>Finally, you can get <code>Prometheus</code> metrics or scrap like this:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">metrics</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MollitiaPrometheus.</span><span style="color:#B392F0;">metrics</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Will return an object containing all metrics from all circuits and modules</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scrap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MollitiaPrometheus.</span><span style="color:#B392F0;">scrap</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Will return the Prometheus scrap</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">metrics</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MollitiaPrometheus.</span><span style="color:#6F42C1;">metrics</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Will return an object containing all metrics from all circuits and modules</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scrap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MollitiaPrometheus.</span><span style="color:#6F42C1;">scrap</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Will return the Prometheus scrap</span></span></code></pre></div><h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h2><h3 id="circuit" tabindex="-1">Circuit <a class="header-anchor" href="#circuit" aria-label="Permalink to &quot;Circuit&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>total_executions</code></td><td style="text-align:left;">The amount of times the circuit has been used.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>total_success</code></td><td style="text-align:left;">The amount of times the circuit succeeded.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>total_failures</code></td><td style="text-align:left;">The amount of times the circuit failed.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>duration_max</code></td><td style="text-align:left;">The maximum duration of the circuit execution.</td><td style="text-align:left;"><code>Gauge</code></td></tr><tr><td style="text-align:left;"><code>duration_ave</code></td><td style="text-align:left;">The average duration of the circuit execution.</td><td style="text-align:left;"><code>Gauge</code></td></tr><tr><td style="text-align:left;"><code>duration_min</code></td><td style="text-align:left;">The minimum duration of the circuit execution.</td><td style="text-align:left;"><code>Gauge</code></td></tr></tbody></table><h3 id="module" tabindex="-1">Module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;Module&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>total_executions</code></td><td style="text-align:left;">The amount of times the module has been used.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>total_success</code></td><td style="text-align:left;">The amount of times the module succeeded.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>total_failures</code></td><td style="text-align:left;">The amount of times the module failed.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>duration_max</code></td><td style="text-align:left;">The maximum duration of the module execution.</td><td style="text-align:left;"><code>Gauge</code></td></tr><tr><td style="text-align:left;"><code>duration_ave</code></td><td style="text-align:left;">The average duration of the module execution.</td><td style="text-align:left;"><code>Gauge</code></td></tr><tr><td style="text-align:left;"><code>duration_min</code></td><td style="text-align:left;">The minimum duration of the module execution.</td><td style="text-align:left;"><code>Gauge</code></td></tr></tbody></table><h3 id="timeout" tabindex="-1">Timeout <a class="header-anchor" href="#timeout" aria-label="Permalink to &quot;Timeout&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>total_failures_timeout</code></td><td style="text-align:left;">The amount of times an execution has timed out.</td><td style="text-align:left;"><code>Counter</code></td></tr></tbody></table><h3 id="retry" tabindex="-1">Retry <a class="header-anchor" href="#retry" aria-label="Permalink to &quot;Retry&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>success_without_retries</code></td><td style="text-align:left;">The amount of executions that succeed without retrying.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>success_with_retries</code></td><td style="text-align:left;">The amount of executions that succeed after retrying.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>failures_without_retries</code></td><td style="text-align:left;">The amount of executions that failed without retrying.</td><td style="text-align:left;"><code>Counter</code></td></tr><tr><td style="text-align:left;"><code>failures_with_retries</code></td><td style="text-align:left;">The amount of executions that failed after retrying.</td><td style="text-align:left;"><code>Gauge</code></td></tr></tbody></table>`,18),o=[n];function p(c,r,i,y,d,E){return t(),a("div",null,o)}const m=s(l,[["render",p]]);export{h as __pageData,m as default};
