import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.2ce6f3f6.js";const h=JSON.parse('{"title":"Addons","description":"","frontmatter":{},"headers":[],"relativePath":"guide/customization/addons.md","filePath":"guide/customization/addons.md"}'),l={name:"guide/customization/addons.md"},e=o(`<h1 id="addons" tabindex="-1">Addons <a class="header-anchor" href="#addons" aria-label="Permalink to &quot;Addons&quot;">​</a></h1><p><code>Addons</code> can modify or add features of <code>Mollitia</code>, for example, it can be useful to create an addon in order to modify the behavior of all modules.</p><p>If you want to create your own, <a href="#create-an-addon">more on that just below.</a></p><h2 id="create-an-addon" tabindex="-1">Create an Addon <a class="header-anchor" href="#create-an-addon" aria-label="Permalink to &quot;Create an Addon&quot;">​</a></h2><p>Creating an addon is similar as <a href="./modules">creating a module</a>, you should implement the <strong>Mollitia.Addon</strong> interface.</p><p>You can then overload some useful methods in order to modify the base <code>Mollitia</code> behavior.</p><p>The best way to understand what you can do with an addon is to check out existing ones.</p><p>Feel free to check out the <a href="./addons/prometheus">Prometheus Addon</a> as learning base.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Mollitia </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;mollitia&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// Creates a class</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UselessAddon</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Mollitia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Addon</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Called when a circuit is created</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onCircuitCreate</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">circuit</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Feel free to modify the circuit behavior, and add properties to it</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Called when a module is created</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onModuleCreate</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Feel free to modify the module behavior, and add properties to it</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Usage:</span></span>
<span class="line"><span style="color:#E1E4E8;">Mollitia.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UselessAddon</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Mollitia </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;mollitia&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// Creates a class</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UselessAddon</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Mollitia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Addon</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Called when a circuit is created</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onCircuitCreate</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">circuit</span><span style="color:#24292E;">, </span><span style="color:#E36209;">options</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Feel free to modify the circuit behavior, and add properties to it</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Called when a module is created</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onModuleCreate</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">module</span><span style="color:#24292E;">, </span><span style="color:#E36209;">options</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Feel free to modify the module behavior, and add properties to it</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Usage:</span></span>
<span class="line"><span style="color:#24292E;">Mollitia.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UselessAddon</span><span style="color:#24292E;">());</span></span></code></pre></div>`,9),p=[e];function t(c,r,i,d,y,E){return a(),n("div",null,p)}const m=s(l,[["render",t]]);export{h as __pageData,m as default};
