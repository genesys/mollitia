import{Q as F,V as x,N as C,C as D}from"./chunks/circuit.96ad7feb.js";import{P as b}from"./chunks/progress-bar.d9b4ef32.js";import{d as A,h as e,x as w,j as k,z as T,o as m,c as h,H as l,w as f,k as s,l as P,_ as B,C as I,a as c,Q as M}from"./chunks/framework.b96a75df.js";import"./chunks/theme.a2ff1341.js";const V={class:"timeout"},N={class:"content"},q={class:"form"},R={class:"row"},O={class:"visualization"},j=A({__name:"timeout",setup(_){const t=e(null),o=e("var(--vp-c-brand-3)"),a=e(300),p=e(0),r=e(0),i=e(0),n=new F({delay:a.value}),g=new x({options:{modules:[n]}});w([a],()=>{n.delay=a.value});function y(){o.value="var(--vp-c-brand-3)",r.value=Date.now(),i.value=window.setInterval(()=>{p.value=Date.now()-r.value,p.value>=t.value.duration&&clearInterval(i.value)},100)}function E(){o.value="var(--vp-c-red-3)",p.value=Date.now()-r.value,clearInterval(i.value)}return k(()=>{n.on("execute",y),n.on("timeout",E)}),T(()=>{n.off("execute",y),n.off("timeout",E)}),(Q,d)=>(m(),h("div",V,[l(D,{ref_key:"circuitRef",ref:t,circuit:P(g)},{default:f(()=>{var u;return[s("div",N,[s("div",q,[s("div",R,[l(C,{class:"delay",modelValue:a.value,"onUpdate:modelValue":d[0]||(d[0]=v=>a.value=v),label:"Delay (in ms):"},null,8,["modelValue"])])]),s("div",O,[l(b,{modelValue:p.value,color:o.value,max:(u=t.value)==null?void 0:u.duration,label:"Progress:"},null,8,["modelValue","color","max"])])])]}),_:1},8,["circuit"])]))}});const S=B(j,[["__scopeId","data-v-07de9d72"]]),L=s("h1",{id:"timeout",tabindex:"-1"},[c("Timeout "),s("a",{class:"header-anchor",href:"#timeout","aria-label":'Permalink to "Timeout"'},"​")],-1),U=s("p",null,[c("The "),s("code",null,"Timeout"),c(" module allows you to "),s("strong",null,"ignore"),c(" the result of your async method if it takes too long.")],-1),$=M(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Mollitia </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;mollitia&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// Creates a circuit</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circuit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Circuit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  options: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    modules: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// Creates a timeout module</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Mollitia.</span><span style="color:#B392F0;">Timeout</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        delay: </span><span style="color:#79B8FF;">120000</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Will get rejected with a TimeoutError if it takes more than 2 minutes</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Let&#39;s see what happens if we run a long function</span></span>
<span class="line"><span style="color:#E1E4E8;">circuit.</span><span style="color:#B392F0;">fn</span><span style="color:#E1E4E8;">(myLongFunction).</span><span style="color:#B392F0;">execute</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// It took less than 2 minutes, and succeed.</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Mollitia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">TimeoutError</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// It took more than 2 minutes.</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// It took less than 2 minutes, and failed.</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Mollitia </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;mollitia&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// Creates a circuit</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circuit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Circuit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  options: {</span></span>
<span class="line"><span style="color:#24292E;">    modules: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// Creates a timeout module</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Mollitia.</span><span style="color:#6F42C1;">Timeout</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        delay: </span><span style="color:#005CC5;">120000</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Will get rejected with a TimeoutError if it takes more than 2 minutes</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Let&#39;s see what happens if we run a long function</span></span>
<span class="line"><span style="color:#24292E;">circuit.</span><span style="color:#6F42C1;">fn</span><span style="color:#24292E;">(myLongFunction).</span><span style="color:#6F42C1;">execute</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// It took less than 2 minutes, and succeed.</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">((</span><span style="color:#E36209;">err</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Mollitia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">TimeoutError</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// It took more than 2 minutes.</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// It took less than 2 minutes, and failed.</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span></code></pre></div><h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h2><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><p>| Name | Description | Default | |:---------|:------------------------------------------------ ----|:--------| | <code>delay</code> | The amount of time before a the promise is rejected. | <code>60000</code> |</p><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Returns</th></tr></thead><tbody><tr><td style="text-align:left;"><code>getExecParams()</code></td><td style="text-align:left;">Returns the circuit function parameters.</td><td style="text-align:left;"><code>any[]</code> <strong>params</strong></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Params</th></tr></thead><tbody><tr><td style="text-align:left;"><code>execute</code></td><td style="text-align:left;">Called when the module is executed.</td><td style="text-align:left;"><code>Mollitia.Circuit</code> <strong>circuit</strong>, <code>Promise&lt;T&gt;</code> <strong>promise</strong>, <code>any[]</code> <strong>params</strong></td></tr><tr><td style="text-align:left;"><code>timeout</code></td><td style="text-align:left;">Called when the module times out.</td><td style="text-align:left;"><code>Mollitia.Circuit</code> <strong>circuit</strong></td></tr></tbody></table>`,9),K=JSON.parse('{"title":"Timeout","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api/modules/timeout.md","filePath":"guide/api/modules/timeout.md"}'),z={name:"guide/api/modules/timeout.md"},X=Object.assign(z,{setup(_){return(t,o)=>{const a=I("ClientOnly");return m(),h("div",null,[L,U,l(a,null,{default:f(()=>[l(S)]),_:1}),$])}}});export{K as __pageData,X as default};
